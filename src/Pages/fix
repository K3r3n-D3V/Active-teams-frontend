import React from "react";
import { useNavigate } from "react-router-dom";
import { useTheme } from "@mui/material/styles"; // Import to detect current theme

const Events = () => {
  const navigate = useNavigate();
  const theme = useTheme(); // Get current theme (light/dark)

  function getNextWeekday(targetDay) {
    const today = new Date();
    const currentDay = today.getDay();
    let daysUntilTarget = targetDay - currentDay;
    if (daysUntilTarget <= 0) daysUntilTarget += 7;
    const nextDate = new Date(today);
    nextDate.setDate(today.getDate() + daysUntilTarget);
    nextDate.setHours(19, 0, 0, 0);
    return nextDate;
  }

  const events = [
    {
      _id: "1",
      service_name: "Forest High School",
      eventType: "cell",
      date: new Date("2025-04-30T09:30"),
      address: "106 Forest Street, Turffontein",
    },
    {
      _id: "2",
      service_name: "Men's Encounter",
      eventType: "conference",
      date: new Date("2025-05-30T19:00"),
      address: "72 Marlborough Rd, Springfield",
    },
    {
      _id: "3",
      service_name: "Wednesday Cell Group",
      eventType: "cell",
      date: getNextWeekday(3),
      address: "Community Center, Johannesburg",
    },
    {
      _id: "4",
      service_name: "Thursday Cell Group",
      eventType: "cell",
      date: getNextWeekday(4),
      address: "Church Hall, Sandton",
    },
    {
      _id: "5",
      service_name: "Sunday Service",
      eventType: "service",
      date: getNextWeekday(0),
      address: "Main Church, Johannesburg",
    },
  ];

  const formatDateTime = (date) => {
    const dateObj = new Date(date);
    const options = {
      weekday: "short",
      year: "numeric",
      month: "short",
      day: "numeric",
    };
    const timeOptions = {
      hour: "numeric",
      minute: "2-digit",
      hour12: true,
    };
    const dateStr = dateObj.toLocaleDateString("en-US", options);
    const timeStr = dateObj.toLocaleTimeString("en-US", timeOptions);
    return `${dateStr}, ${timeStr}`;
  };

  return (
    <div
      style={{
        ...styles.container,
        backgroundColor: theme.palette.background.default, // Adjust background color based on theme
        color: theme.palette.text.primary, // Adjust text color
      }}
    >
      {/* Top Bar */}
      <div
        style={{
          ...styles.header,
          backgroundColor: theme.palette.background.paper, // Adjust header background based on theme
        }}
      >
        <div style={styles.headerLeft}>
          <button style={{ ...styles.button, ...styles.btnNewEvent, marginLeft: "25px" }}>+ NEW EVENT</button>
          <button style={{ ...styles.button, ...styles.btnFilter, marginRight: "25px" }}>‚öôÔ∏è FILTER EVENTS</button>
        </div>
        <div style={styles.headerRight}>
          <div style={styles.profileIcon}></div>
        </div>
      </div>

      {/* SERVICE CHECK-IN Styled Button */}
      <div style={styles.centerAvatarSection}>
        <button
          style={styles.avatarButton}
          onClick={() => navigate("/service-check-in")}
        >
          <span style={styles.labelText}>SERVICE</span>

          <div style={styles.avatars}>
            <span
              style={{
                ...styles.avatarCircle,
                backgroundColor: "#cce6ff",
              }}
            >
              üßëüèª‚Äçüéì
            </span>
            <span
              style={{
                ...styles.avatarCircle,
                backgroundColor: "#ffedcc",
              }}
            >
              üëµüèº
            </span>
            <span
              style={{
                ...styles.avatarCircle,
                backgroundColor: "#ffcce0",
              }}
            >
              üë®üèΩ
            </span>
            <span
              style={{
                ...styles.avatarCircle,
                backgroundColor: "#ffe6cc",
              }}
            >
              üßëüèΩ‚Äçü¶±
            </span>
            <span
              style={{
                ...styles.avatarCircle,
                backgroundColor: "#ccf2d1",
              }}
            >
              üë©üèæ
            </span>
          </div>

          <span style={styles.labelText}>CHECK-IN</span>
        </button>
      </div>

      {/* Events Grid */}
      <div style={styles.eventsGrid}>
        {events.map((event) => (
          <div key={event._id} style={styles.eventCard}>
            <div style={styles.eventHeader}>
              <h3 style={styles.eventTitle}>{event.service_name}</h3>
              <span
                style={{
                  ...styles.eventBadge,
                  backgroundColor:
                    event.eventType === "cell"
                      ? "#007bff"
                      : event.eventType === "conference"
                      ? "#e91e63"
                      : "#6c757d",
                }}
              >
                {event.eventType.toUpperCase()}
              </span>
            </div>
            <div>
              <p style={styles.eventDate}>{formatDateTime(event.date)}</p>
              <p style={styles.eventLocation}>{event.address}</p>
            </div>
            <div style={styles.eventActions}>
              <button style={{ ...styles.actionBtn, ...styles.captureBtn }}>
                {event.eventType === "cell"
                  ? "Capture Cell"
                  : "Capture Attendance"}
              </button>
              <button
                style={{
                  ...styles.actionBtn,
                  ...styles.paymentBtn,
                  ...(event.eventType === "cell" || event.eventType === "service"
                    ? styles.disabledBtn
                    : {}),
                }}
                disabled={event.eventType === "cell" || event.eventType === "service"}
              >
                {event.eventType === "cell" || event.eventType === "service"
                  ? "No Payment"
                  : "Payment"}
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

const styles = {
  container: {
    minHeight: "100vh",
    fontFamily: "system-ui, sans-serif",
    margin: 0,
    padding: 0,
    overflowX: "hidden",
  },
  header: {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    padding: "1rem 1.5rem",
    borderBottom: "1px solid #e9ecef",
  },
  headerLeft: {
    display: "flex",
    alignItems: "center",
    gap: "0.75rem",
  },
  headerRight: {
    display: "flex",
    alignItems: "center",
  },
  profileIcon: {
    width: "2.25rem",
    height: "2.25rem",
    borderRadius: "50%",
    background: "#ddd",
  },
  button: {
    borderRadius: "6px",
    fontWeight: 500,
    padding: "0.5rem 1rem",
    cursor: "pointer",
    fontSize: "0.875rem",
    border: "none",
    transition: "all 0.2s",
  },
  btnNewEvent: {
    backgroundColor: "#000",
    color: "#fff",
  },
  btnFilter: {
    backgroundColor: "#fff",
    border: "1px solid #dee2e6",
    color: "#6c757d",
  },
  centerAvatarSection: {
    display: "flex",
    justifyContent: "center",
    padding: "2rem 1rem",
  },
  avatarButton: {
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    gap: "1rem",
    padding: "0.8rem 1.5rem",
    borderRadius: "20px",
    backgroundColor: "#fff",
    border: "none",
    boxShadow: "0 4px 12px rgba(0, 0, 0, 0.08)",
    cursor: "pointer",
    transition: "transform 0.2s ease",
    flexWrap: "wrap",
  },
  labelText: {
    fontWeight: "700",
    fontSize: "1rem",
    color: "#000",
    whiteSpace: "nowrap",
  },
  avatars: {
    display: "flex",
    alignItems: "center",
    gap: "0.4rem",
  },
  avatarCircle: {
    width: "40px",
    height: "40px",
    borderRadius: "50%",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    fontSize: "20px",
  },
  eventsGrid: {
    display: "grid",
    gridTemplateColumns: "repeat(auto-fit, minmax(320px, 1fr))",
    gap: "1.5rem",
    padding: "1.5rem",
    boxSizing: "border-box",
  },
  eventCard: {
    backgroundColor: "#fff",
    borderRadius: "16px",
    padding: "1.5rem",
    boxShadow: "0 2px 12px rgba(0, 0, 0, 0.08)",
  },
  eventHeader: {
    display: "flex",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: "0.75rem",
  },
  eventTitle: {
    margin: 0,
    fontSize: "1.25rem",
    fontWeight: 600,
    color: "#212529",
  },
  eventBadge: {
    fontSize: "0.75rem",
    fontWeight: 600,
    padding: "0.25rem 0.75rem",
    borderRadius: "50px",
    color: "#fff",
    textTransform: "uppercase",
    whiteSpace: "nowrap",
  },
  eventDate: {
    margin: "0.25rem 0",
    fontSize: "1rem",
    color: "#495057",
  },
  eventLocation: {
    margin: "0.25rem 0",
    fontSize: "0.95rem",
    color: "#6c757d",
  },
  eventActions: {
    marginTop: "1rem",
    display: "flex",
    gap: "0.5rem",
    flexWrap: "wrap",
  },
  actionBtn: {
    flex: 1,
    padding: "0.5rem 1rem",
    border: "none",
    borderRadius: "8px",
    fontWeight: 600,
    cursor: "pointer",
    fontSize: "0.9rem",
    whiteSpace: "nowrap",
  },
  captureBtn: {
    backgroundColor: "#000",
    color: "#fff",
  },
  paymentBtn: {
    backgroundColor: "#e9ecef",
    color: "#6c757d",
  },
  disabledBtn: {
    opacity: 0.6,
    cursor: "not-allowed",
  },
};

export default Events;